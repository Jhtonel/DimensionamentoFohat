import React, { useState, useEffect } from "react";
import { Configuracao } from "@/entities/Configuracao";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Settings, Plus, Trash2, Save } from "lucide-react";
import { motion } from "framer-motion";

export default function Configuracoes() {
  const [configs, setConfigs] = useState([]);
  const [tarifas, setTarifas] = useState([]);
  const [equipamentos, setEquipamentos] = useState({});
  const [loading, setLoading] = useState(false);
  const [novaTarifa, setNovaTarifa] = useState({ concessionaria: "", tarifa_kwh: "" });

  useEffect(() => {
    loadConfigs();
  }, []);

  const loadConfigs = async () => {
    const configsData = await Configuracao.list();
    setConfigs(configsData);
    
    const tarifasData = configsData.filter(c => c.tipo === "tarifa");
    setTarifas(tarifasData);

    const equipConfig = configsData.find(c => c.chave === "potencia_placa");
    if (equipConfig) {
      setEquipamentos(equipConfig);
    } else {
      const newEquip = {
        chave: "potencia_placa",
        tipo: "equipamento",
        potencia_placa_padrao_w: 600
      };
      setEquipamentos(newEquip);
    }

    const eficConfig = configsData.find(c => c.chave === "eficiencia_sistema");
    if (!eficConfig) {
      await Configuracao.create({
        chave: "eficiencia_sistema",
        tipo: "equipamento",
        eficiencia_sistema: 0.80
      });
    }
  };

  const handleSaveEquipamentos = async () => {
    setLoading(true);
    
    if (equipamentos.id) {
      await Configuracao.update(equipamentos.id, equipamentos);
    } else {
      await Configuracao.create(equipamentos);
    }
    
    setLoading(false);
  };

  const handleAddTarifa = async () => {
    if (!novaTarifa.concessionaria || !novaTarifa.tarifa_kwh) return;
    
    setLoading(true);
    
    await Configuracao.create({
      chave: `tarifa_${novaTarifa.concessionaria.toLowerCase().replace(/\s+/g, '_')}`,
      tipo: "tarifa",
      concessionaria: novaTarifa.concessionaria,
      tarifa_kwh: parseFloat(novaTarifa.tarifa_kwh)
    });
    
    setNovaTarifa({ concessionaria: "", tarifa_kwh: "" });
    loadConfigs();
    setLoading(false);
  };

  const handleDeleteTarifa = async (id) => {
    if (window.confirm("Tem certeza que deseja excluir esta tarifa?")) {
      await Configuracao.delete(id);
      loadConfigs();
    }
  };

  const handleUpdateTarifa = async (tarifa) => {
    await Configuracao.update(tarifa.id, tarifa);
    loadConfigs();
  };

  return (
    <div className="min-h-screen p-4 md:p-8">
      <div className="max-w-6xl mx-auto space-y-6">
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
        >
          <h1 className="text-4xl font-bold bg-gradient-to-r from-sky-600 to-orange-500 bg-clip-text text-transparent flex items-center gap-3">
            <Settings className="w-10 h-10 text-sky-600" />
            Configurações
          </h1>
          <p className="text-gray-600 mt-2">Configure tarifas e equipamentos</p>
        </motion.div>

        <div className="space-y-6">
          <Card className="glass-card border-0 shadow-2xl">
            <CardHeader className="border-b border-sky-100">
              <CardTitle className="text-2xl font-bold text-sky-700">Tarifas das Concessionárias</CardTitle>
            </CardHeader>
            <CardContent className="p-6 space-y-6">
              <Card className="bg-sky-50 border-sky-200">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2 text-sky-700">
                    <Plus className="w-5 h-5" />
                    Adicionar Nova Tarifa
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div className="space-y-2">
                      <Label>Concessionária</Label>
                      <Input
                        value={novaTarifa.concessionaria}
                        onChange={(e) => setNovaTarifa(prev => ({ ...prev, concessionaria: e.target.value }))}
                        placeholder="Ex: CPFL Paulista"
                        className="bg-white"
                      />
                    </div>
                    <div className="space-y-2">
                      <Label>Tarifa (R$/kWh)</Label>
                      <Input
                        type="number"
                        step="0.001"
                        value={novaTarifa.tarifa_kwh}
                        onChange={(e) => setNovaTarifa(prev => ({ ...prev, tarifa_kwh: e.target.value }))}
                        placeholder="0.750"
                        className="bg-white"
                      />
                    </div>
                    <div className="flex items-end">
                      <Button
                        onClick={handleAddTarifa}
                        disabled={loading}
                        className="w-full bg-gradient-to-r from-sky-500 to-sky-600"
                      >
                        <Plus className="w-4 h-4 mr-2" />
                        Adicionar
                      </Button>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {tarifas.map((tarifa) => (
                  <Card key={tarifa.id} className="bg-white border-sky-200 hover:shadow-lg transition-shadow">
                    <CardContent className="p-4">
                      <div className="flex justify-between items-start mb-3">
                        <div>
                          <h4 className="font-bold text-gray-900">{tarifa.concessionaria}</h4>
                          <p className="text-3xl font-bold text-sky-600 mt-1">
                            R$ {tarifa.tarifa_kwh?.toFixed(3)}
                          </p>
                          <p className="text-xs text-gray-500">por kWh</p>
                        </div>
                        <Button
                          variant="ghost"
                          size="icon"
                          onClick={() => handleDeleteTarifa(tarifa.id)}
                          className="text-red-600 hover:bg-red-50"
                        >
                          <Trash2 className="w-4 h-4" />
                        </Button>
                      </div>
                      <div className="flex gap-2">
                        <Input
                          type="number"
                          step="0.001"
                          value={tarifa.tarifa_kwh}
                          onChange={(e) => {
                            const updated = { ...tarifa, tarifa_kwh: parseFloat(e.target.value) };
                            setTarifas(prev => prev.map(t => t.id === tarifa.id ? updated : t));
                          }}
                          className="bg-gray-50"
                        />
                        <Button
                          size="sm"
                          onClick={() => handleUpdateTarifa(tarifa)}
                          className="bg-green-600 hover:bg-green-700"
                        >
                          <Save className="w-4 h-4" />
                        </Button>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </CardContent>
          </Card>

          <Card className="glass-card border-0 shadow-2xl">
            <CardHeader className="border-b border-sky-100">
              <CardTitle className="text-2xl font-bold text-sky-700">Equipamentos</CardTitle>
            </CardHeader>
            <CardContent className="p-6 space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div className="space-y-2">
                  <Label>Potência Padrão da Placa (W)</Label>
                  <Input
                    type="number"
                    value={equipamentos.potencia_placa_padrao_w || ""}
                    onChange={(e) => setEquipamentos(prev => ({ ...prev, potencia_placa_padrao_w: parseFloat(e.target.value) }))}
                    className="bg-white/50 border-sky-200"
                  />
                </div>
              </div>

              <Card className="bg-blue-50 border-blue-200">
                <CardContent className="p-4">
                  <h4 className="font-semibold text-blue-900 mb-3">Custos Fixos por Projeto</h4>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span>Instalação:</span>
                      <span className="font-semibold">R$ 200,00 por placa</span>
                    </div>
                    <div className="flex justify-between">
                      <span>CA:</span>
                      <span className="font-semibold">R$ 100,00 por placa</span>
                    </div>
                    <div className="flex justify-between">
                      <span>Plaquinhas:</span>
                      <span className="font-semibold">R$ 60,00</span>
                    </div>
                    <div className="flex justify-between">
                      <span>Obra:</span>
                      <span className="font-semibold">10% do custo de instalação</span>
                    </div>
                    <div className="border-t border-blue-300 pt-2 mt-2">
                      <p className="font-semibold text-blue-900">Homologação (por faixa):</p>
                      <div className="ml-4 mt-1 space-y-1">
                        <div className="flex justify-between">
                          <span>até 5 kWp:</span>
                          <span className="font-semibold">R$ 465,00</span>
                        </div>
                        <div className="flex justify-between">
                          <span>até 10 kWp:</span>
                          <span className="font-semibold">R$ 565,00</span>
                        </div>
                        <div className="flex justify-between">
                          <span>até 20 kWp:</span>
                          <span className="font-semibold">R$ 765,00</span>
                        </div>
                        <div className="flex justify-between">
                          <span>até 50 kWp:</span>
                          <span className="font-semibold">R$ 865,00</span>
                        </div>
                        <div className="flex justify-between">
                          <span>até 75 kWp:</span>
                          <span className="font-semibold">R$ 1.065,00</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <div className="flex justify-end">
                <Button
                  onClick={handleSaveEquipamentos}
                  disabled={loading}
                  className="bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700"
                >
                  <Save className="w-4 h-4 mr-2" />
                  Salvar Equipamentos
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}